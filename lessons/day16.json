{
  "title": "Dia 16 ‚Äì Introdu√ß√£o √† Programa√ß√£o Orientada a Objetos (POO)",
  "concepts": [
    {
      "type": "explanation",
      "heading": "O que √© POO?",
      "text": "Oi, meu pequeno programador! üòÑ Hoje vamos aprender um jeito diferente de programar: a Programa√ß√£o Orientada a Objetos (POO). Sabe quando voc√™ brinca de montar seus pr√≥prios brinquedos? Cada um tem sua cor, tamanho e faz alguma coisa diferente, n√©? Pois √©, a POO faz a mesma coisa no c√≥digo: cria 'brinquedos' digitais com suas pr√≥prias caracter√≠sticas e a√ß√µes. Vamos juntos montar nossos pr√≥prios personagens no Python!"
    },
    {
      "type": "image",
      "heading": "Como funcionam os objetos",
      "image_placeholder": "imagem de brinquedos (como carrinhos) com etiquetas como 'cor', 'velocidade', 'som'",
      "image_url": "resources/images/lesson_illustrations/lesson_16_cars.jpg"
    },
    {
      "type": "explanation",
      "heading": "Classe e Objeto",
      "text": "Pensa assim: a 'classe' \u00e9 como uma receita de bolo ou uma caixa de Lego com instru\u00e7\u00f5es. J\u00e1 o 'objeto' \u00e9 o bolo pronto ou o carrinho que voc\u00ea montou. Com uma classe, voc\u00ea pode fazer v\u00e1rios objetos parecidos, cada um com detalhes diferentes. Legal, n\u00e9?"
    },
    {
      "type": "code",
      "heading": "Exemplo de classe em Python",
      "text": "Vamos montar nosso primeiro carrinho com Python! Copie com carinho no Thonny:",
      "code": "class Carrinho:\n    def __init__(self, cor, velocidade):\n        self.cor = cor\n        self.velocidade = velocidade\n\n    def buzinar(self):\n        print(f\"O carrinho {self.cor} diz: Pii Pii!\")"
    },
    {
      "type": "instruction",
      "heading": "Criando um carrinho",
      "text": "Agora vamos montar um carrinho azul que pode buzinar. Vamos juntos?",
      "code": "meu_carrinho = Carrinho(\"azul\", 10)\nmeu_carrinho.buzinar()"
    },
    {
      "type": "common_mistake",
      "heading": "Erro comum",
      "text": "√Äs vezes esquecemos de colocar os valores na hora de criar o carrinho (cor e velocidade). Sem isso, o Python fica confuso e d√° erro. Sempre pense: se estou montando um brinquedo, preciso dizer como ele \u00e9!"
    },
    {
      "type": "curiosity",
      "heading": "Sabia que‚Ä¶?",
      "text": "Jogos como Minecraft e Roblox usam muito POO! Cada personagem, item ou efeito √© um objeto com seus pr√≥prios poderes. Agora voc√™ est√° entrando no mundo desses criadores!"
    },
    {
      "type": "question",
      "heading": "Pergunta para pensar",
      "text": "Voc√™ j√° brincou com bonecos, carrinhos ou avi√µes? Que a√ß√µes eles fazem? E quais caracter√≠sticas eles t√™m? Tente imaginar como voc√™ criaria eles no Python!"
    },
    {
      "type": "step",
      "heading": "Passo a passo",
      "steps": [
        "1. Abra o Thonny.",
        "2. Crie um novo arquivo chamado carrinho.py.",
        "3. Escreva a classe Carrinho com __init__ e o m√©todo buzinar().",
        "4. Crie um objeto usando Carrinho(\"azul\", 10).",
        "5. Fa√ßa o carrinho buzinar com meu_carrinho.buzinar().",
        "6. Clique em Executar e veja a m√°gica acontecer!"
      ]
    },
    {
      "type": "summary",
      "heading": "Resumo da aula",
      "text": "Hoje voc√™ aprendeu que uma **classe** √© o molde (como uma receita) e o **objeto** √© o brinquedo feito com esse molde. Tamb√©m viu como dar vida a esse brinquedo com a√ß√µes!"
    },
    {
      "type": "celebration",
      "heading": "Voc√™ conseguiu!",
      "text": "Uhuu! üéâ Voc√™ criou seu primeiro objeto com Python. Isso √© um passo de gigante no mundo da programa√ß√£o. Parab√©ns por sua dedica√ß√£o! Estou muito orgulhoso de voc√™! üíô"
    }
  ],
  "exercises": [
    {
      "type": "exercise",
      "prompt": "Crie uma classe chamada Bola com atributos 'cor' e 'tamanho', e um m√©todo 'quicar' que imprime uma mensagem.",
      "code_hint": "Dica: use __init__ para cor e tamanho, e defina um m√©todo que fa√ßa print(\"A bola est√° quicando!\")"
    },
    {
      "type": "exercise",
      "prompt": "Crie duas bolas com cores diferentes e fa√ßa cada uma quicar.",
      "code_hint": "Dica: crie algo como bola1 = Bola(\"vermelha\", \"grande\") e bola2 = Bola(\"azul\", \"pequena\")"
    }
  ],
  "project": {
    "type": "project",
    "name": "Meu pr√≥prio brinquedo com POO",
    "description": "Invente um brinquedo (como um Cachorro, Avi√£o ou Boneca). Crie uma classe com atributos como cor, nome ou for√ßa, e um comportamento divertido como 'voar', 'falar' ou 'latir'.",
    "goal": "Criar uma classe com pelo menos 2 atributos e 1 m√©todo. Depois, crie um objeto e teste esse comportamento no Thonny."
  },
  "video_suggestion": {
    "type": "video",
    "text": "Veja esse v√≠deo curtinho mostrando como usar classes e objetos em Python de um jeito divertido:",
    "url": "https://www.youtube.com/embed/ZDa-Z5JzLYM"
  }
}
